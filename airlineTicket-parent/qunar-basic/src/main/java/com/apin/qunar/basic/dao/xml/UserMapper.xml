<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
  <mapper namespace="com.apin.qunar.basic.dao.mapper.UserMapper" >
    <resultMap id="UserResult" type="com.apin.qunar.basic.dao.model.User" >
      <id column="id" property="id" jdbcType="BIGINT" />
      <result column="merchant_no" property="merchantNo" jdbcType="CHAR" />
      <result column="account" property="account" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="real_name" property="realName" jdbcType="VARCHAR" />
      <result column="department" property="department" jdbcType="VARCHAR" />
      <result column="account_type" property="accountType" jdbcType="INTEGER" />
      <result column="has_admin" property="hasAdmin" jdbcType="INTEGER" />
      <result column="has_enable" property="hasEnable" jdbcType="INTEGER" />
      <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
      <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Example_Where_Clause" >
      <where >
        <foreach collection="oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <trim prefix="(" suffix=")" prefixOverrides="and" >
              <foreach collection="criteria.criteria" item="criterion" >
                <choose >
                  <when test="criterion.noValue" >
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue" >
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue" >
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue" >
                    and ${criterion.condition}
                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
      <where >
        <foreach collection="example.oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <trim prefix="(" suffix=")" prefixOverrides="and" >
              <foreach collection="criteria.criteria" item="criterion" >
                <choose >
                  <when test="criterion.noValue" >
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue" >
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue" >
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue" >
                    and ${criterion.condition}
                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="UserColumns" >
      id, merchant_no, account, password, real_name, department, account_type, has_admin, 
      has_enable, insert_time, update_time
    </sql>
    <select id="selectByExample" resultMap="UserResult" parameterType="com.apin.qunar.basic.dao.model.UserExample" >
      select
      <if test="distinct" >
        distinct
      </if>
      <include refid="UserColumns" />
      from user
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
      <if test="orderByClause != null" >
        order by ${orderByClause}
      </if>
      <if test="mysqlOffset != null" >
        <if test="mysqlLength != null" >
           limit #{mysqlOffset} , #{mysqlLength} 
        </if>
      </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="UserResult" parameterType="java.lang.Long" >
      select 
      <include refid="UserColumns" />
      from user
      where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
      delete from user
      where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.apin.qunar.basic.dao.model.UserExample" >
      delete from user
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
    </delete>
    <insert id="insert" parameterType="com.apin.qunar.basic.dao.model.User" >
      insert into user (id, merchant_no, account, 
        password, real_name, department, 
        account_type, has_admin, has_enable, 
        insert_time, update_time)
      values (#{id,jdbcType=BIGINT}, #{merchantNo,jdbcType=CHAR}, #{account,jdbcType=VARCHAR}, 
        #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
        #{accountType,jdbcType=INTEGER}, #{hasAdmin,jdbcType=INTEGER}, #{hasEnable,jdbcType=INTEGER}, 
        #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.apin.qunar.basic.dao.model.User" >
      insert into user
      <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="id != null" >
          id,
        </if>
        <if test="merchantNo != null" >
          merchant_no,
        </if>
        <if test="account != null" >
          account,
        </if>
        <if test="password != null" >
          password,
        </if>
        <if test="realName != null" >
          real_name,
        </if>
        <if test="department != null" >
          department,
        </if>
        <if test="accountType != null" >
          account_type,
        </if>
        <if test="hasAdmin != null" >
          has_admin,
        </if>
        <if test="hasEnable != null" >
          has_enable,
        </if>
        <if test="insertTime != null" >
          insert_time,
        </if>
        <if test="updateTime != null" >
          update_time,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides="," >
        <if test="id != null" >
          #{id,jdbcType=BIGINT},
        </if>
        <if test="merchantNo != null" >
          #{merchantNo,jdbcType=CHAR},
        </if>
        <if test="account != null" >
          #{account,jdbcType=VARCHAR},
        </if>
        <if test="password != null" >
          #{password,jdbcType=VARCHAR},
        </if>
        <if test="realName != null" >
          #{realName,jdbcType=VARCHAR},
        </if>
        <if test="department != null" >
          #{department,jdbcType=VARCHAR},
        </if>
        <if test="accountType != null" >
          #{accountType,jdbcType=INTEGER},
        </if>
        <if test="hasAdmin != null" >
          #{hasAdmin,jdbcType=INTEGER},
        </if>
        <if test="hasEnable != null" >
          #{hasEnable,jdbcType=INTEGER},
        </if>
        <if test="insertTime != null" >
          #{insertTime,jdbcType=TIMESTAMP},
        </if>
        <if test="updateTime != null" >
          #{updateTime,jdbcType=TIMESTAMP},
        </if>
      </trim>
    </insert>
    <select id="countByExample" parameterType="com.apin.qunar.basic.dao.model.UserExample" resultType="java.lang.Integer" >
      select count(*) from user
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
      update user
      <set >
        <if test="record.id != null" >
          id = #{record.id,jdbcType=BIGINT},
        </if>
        <if test="record.merchantNo != null" >
          merchant_no = #{record.merchantNo,jdbcType=CHAR},
        </if>
        <if test="record.account != null" >
          account = #{record.account,jdbcType=VARCHAR},
        </if>
        <if test="record.password != null" >
          password = #{record.password,jdbcType=VARCHAR},
        </if>
        <if test="record.realName != null" >
          real_name = #{record.realName,jdbcType=VARCHAR},
        </if>
        <if test="record.department != null" >
          department = #{record.department,jdbcType=VARCHAR},
        </if>
        <if test="record.accountType != null" >
          account_type = #{record.accountType,jdbcType=INTEGER},
        </if>
        <if test="record.hasAdmin != null" >
          has_admin = #{record.hasAdmin,jdbcType=INTEGER},
        </if>
        <if test="record.hasEnable != null" >
          has_enable = #{record.hasEnable,jdbcType=INTEGER},
        </if>
        <if test="record.insertTime != null" >
          insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateTime != null" >
          update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      <if test="_parameter != null" >
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByExample" parameterType="map" >
      update user
      set id = #{record.id,jdbcType=BIGINT},
        merchant_no = #{record.merchantNo,jdbcType=CHAR},
        account = #{record.account,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        real_name = #{record.realName,jdbcType=VARCHAR},
        department = #{record.department,jdbcType=VARCHAR},
        account_type = #{record.accountType,jdbcType=INTEGER},
        has_admin = #{record.hasAdmin,jdbcType=INTEGER},
        has_enable = #{record.hasEnable,jdbcType=INTEGER},
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
      <if test="_parameter != null" >
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.apin.qunar.basic.dao.model.User" >
      update user
      <set >
        <if test="merchantNo != null" >
          merchant_no = #{merchantNo,jdbcType=CHAR},
        </if>
        <if test="account != null" >
          account = #{account,jdbcType=VARCHAR},
        </if>
        <if test="password != null" >
          password = #{password,jdbcType=VARCHAR},
        </if>
        <if test="realName != null" >
          real_name = #{realName,jdbcType=VARCHAR},
        </if>
        <if test="department != null" >
          department = #{department,jdbcType=VARCHAR},
        </if>
        <if test="accountType != null" >
          account_type = #{accountType,jdbcType=INTEGER},
        </if>
        <if test="hasAdmin != null" >
          has_admin = #{hasAdmin,jdbcType=INTEGER},
        </if>
        <if test="hasEnable != null" >
          has_enable = #{hasEnable,jdbcType=INTEGER},
        </if>
        <if test="insertTime != null" >
          insert_time = #{insertTime,jdbcType=TIMESTAMP},
        </if>
        <if test="updateTime != null" >
          update_time = #{updateTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.apin.qunar.basic.dao.model.User" >
      update user
      set merchant_no = #{merchantNo,jdbcType=CHAR},
        account = #{account,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        real_name = #{realName,jdbcType=VARCHAR},
        department = #{department,jdbcType=VARCHAR},
        account_type = #{accountType,jdbcType=INTEGER},
        has_admin = #{hasAdmin,jdbcType=INTEGER},
        has_enable = #{hasEnable,jdbcType=INTEGER},
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
      where id = #{id,jdbcType=BIGINT}
    </update>
  </mapper>